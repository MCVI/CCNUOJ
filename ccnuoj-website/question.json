{
  "question": [
    {
      "createTime": "20180910",
      "lastModifiedTime": "20180911",
      "title": "1+1=?",
      "text": "do you know 1+1=??",
      "extraInfo": "null",
      "id": "000001",
      "judgeScheme": "1",
      "judgeParam": "2000ms,100kb",
      "author": "pyltoca"
    },
    {
      "createTime": "20180911",
      "lastModifiedTime": "20180911",
      "title": "Maya Calendar",
      "text": "描述 \r\n During his last sabbatical, professor M. A. Ya made a surprising discovery about the old Maya calendar. From an old knotted message, professor discovered that the Maya civilization used a 365 day long year, called Haab, which had 19 months. Each of the first 18 months was 20 days long, and the names of the months were pop, no, zip, zotz, tzec, xul, yoxkin, mol, chen, yax, zac, ceh, mac, kankin, muan, pax, koyab, cumhu. Instead of having names, the days of the months were denoted by numbers starting from 0 to 19. The last month of Haab was called uayet and had 5 days denoted by numbers 0, 1, 2, 3, 4. \r\n The Maya believed that this month was unlucky, the court of justice was not in session, the trade stopped, people did not even sweep the floor. For religious purposes, the Maya used another calendar in which the year was called Tzolkin (holly year). \r\n The year was divided into thirteen periods, each 20 days long. Each day was denoted by a pair consisting of a number and the name of the day. They used 20 names: imix, ik, akbal, kan, chicchan, cimi, manik, lamat, muluk, ok, chuen, eb, ben, ix, mem, cib, caban, eznab, canac, ahau and 13 numbers; both in cycles. \r\n Notice that each day has an unambiguous description. For example, at the beginning of the year the days were described as follows: \n  1 imix, 2 ik, 3 akbal, 4 kan, 5 chicchan, 6 cimi, 7 manik, 8 lamat, 9 muluk, 10 ok, 11 chuen, 12 eb, 13 ben, 1 ix, 2 mem, 3 cib, 4 caban, 5 eznab, 6 canac, 7 ahau, and again in the next period 8 imix, 9 ik, 10 akbal . . . \r\nYears (both Haab and Tzolkin) were denoted by numbers 0, 1, : : : , where the number 0 was the beginning of the world. Thus, the first day was: Haab: 0. pop 0 Tzolkin: 1 imix 0 \r\n Help professor M. A. Ya and write a program for him to convert the dates from the Haab calendar to the Tzolkin calendar.  输入格式  第一行一个正整数 nn。  第二行 nn 个用空格隔开的正整数，第 ii 个为 aiai。 输出格式  一行 nn 个用空格隔开的整数，第 ii 个表示 sgcd(a1,ai)sgcd(a1,ai)。C/C++ 输入输出 long long 时请用 %lld。由于本题数据量较大，建议不要使用 cin/cout 进行输入输出。 样例 input 8 9 10 11 23 35 output 8 ",
      "extraInfo": "null",
      "id": "000015",
      "judgeScheme": "1",
      "judgeParam": "2000ms,100kb",
      "author": "pyltoca"
    },
    {
      "createTime": "20180910",
      "lastModifiedTime": "20180911",
      "title": "487-3279",
      "text": "Businesses like to have memorable telephone numbers. One way to make a telephone number memorable is to have it spell a memorable word or phrase. For example, you can call the University of Waterloo by dialing the memorable TUT-GLOP. Sometimes only part of the number is used to spell a word. When you get back to your hotel tonight you can order a pizza from Gino's by dialing 310-GINO. Another way to make a telephone number memorable is to group the digits in a memorable way. You could order your pizza from Pizza Hut by calling their ``three tens'' number 3-10-10-10. ",
      "extraInfo": "null",
      "id": "000002",
      "judgeScheme": "1",
      "judgeParam": "2000ms,100kb",
      "author": "pyltoca"
    },
    {
      "createTime": "20180923",
      "lastModifiedTime": "20180924",
      "title": "DNA Sorting",
      "text": "One measure of ``unsortedness'' in a sequence is the number of pairs of entries that are out of order with respect to each other. For instance, in the letter sequence ``DAABEC'', this measure is 5, since D is greater than four letters to its right and E is greater than one letter to its right. This measure is called the number of inversions in the sequence. The sequence ``AACEDGG'' has only one inversion (E and D)---it is nearly sorted---while the sequence ``ZWQM'' has 6 inversions (it is as unsorted as can be---exactly the reverse of sorted). ",
      "extraInfo": "null",
      "id": "000003",
      "judgeScheme": "1",
      "judgeParam": "2000ms,100kb",
      "author": "pyltoca"
    },
    {
      "createTime": "20180812",
      "lastModifiedTime": "20180910",
      "title": "Edge Detection",
      "text": "IONU Satellite Imaging, Inc. records and stores very large images using run length encoding. You are to write a program that reads a compressed image, finds the edges in the image, as described below, and outputs another compressed image of the detected edges. ",
      "extraInfo": "null",
      "id": "000004",
      "judgeScheme": "1",
      "judgeParam": "2000ms,100kb",
      "author": "pyltoca"
    },
    {
      "createTime": "20180916",
      "lastModifiedTime": "20180917",
      "title": "Joseph",
      "text": "The Joseph's problem is notoriously known. For those who are not familiar with the original problem: from among n people, numbered 1, 2, . . ., n, standing in circle every mth is going to be executed and only the life of the last remaining person will be saved. Joseph was smart enough to choose the position of the last remaining person, thus saving his life to give us the message about the incident. For example when n = 6 and m = 5 then the people will be executed in the order 5, 4, 6, 2, 3 and 1 will be saved.",
      "extraInfo": "null",
      "id": "000005",
      "judgeScheme": "1",
      "judgeParam": "2000ms,100kb",
      "author": "pyltoca"
    },
    {
      "createTime": "20180917",
      "lastModifiedTime": "20180918",
      "title": "Number Sequence",
      "text": "A single positive integer i is given. Write a program to find the digit located in the position i in the sequence of number groups S1S2...Sk. Each group Sk consists of a sequence of positive integer numbers ranging from 1 to k, written one after another. ",
      "extraInfo": "null",
      "id": "000006",
      "judgeScheme": "1",
      "judgeParam": "2000ms,100kb",
      "author": "pyltoca"
    },
    {
      "createTime": "20180918",
      "lastModifiedTime": "20180919",
      "title": "Rating",
      "text": "This participant assigned each team a unique team identifier, which was an integer from 1 to 100 inclusively. For each contest team identifiers of the participating teams were written in a column according to their place in that contest. Identifiers of the teams that had equal results were written on the same line. The participant started with the team(s) that was(were) the best in that contest (writing them on the first line) and continued in the order of decreasing results. ",
      "extraInfo": "null",
      "id": "000007",
      "judgeScheme": "1",
      "judgeParam": "2000ms,100kb",
      "author": "pyltoca"
    },
    {
      "createTime": "20180923",
      "lastModifiedTime": "20180924",
      "title": "青蛙的约会",
      "text": "  两只青蛙在网上相识了，它们聊得很开心，于是觉得很有必要见一面。它们很高兴地发现它们住在同一条纬度线上，于是它们约定各自朝西跳，直到碰面为止。 可是它们出发之前忘记了一件很重要的事情，既没有问清楚对方的特征，也没有约定见面的具体位置。不过青蛙们都是很乐观的，它们觉得只要一直朝着某个方向跳下去，总能碰到对方的。但是除非这两只青蛙在同一时间跳到同一点上，不然是永远都不可能碰面的。为了帮助这两只乐观的青蛙，你被要求写一个程序来判断这两只青蛙是否能够碰面，会在什么时候碰面。 ",
      "extraInfo": "null",
      "id": "000008",
      "judgeScheme": "1",
      "judgeParam": "2000ms,100kb",
      "author": "pyltoca"
    },
    {
      "createTime": "20180910",
      "lastModifiedTime": "20180911",
      "title": "取石子游戏",
      "text": "有两堆石子，数量任意，可以不同。游戏开始由两个人轮流取石子。游戏规定，每次有两种不同的取法，一是可以在任意的一堆中取走任意多的石子；二是可以在两堆中同时取走相同数量的石子。最后把石子全部取完者为胜者。现在给出初始的两堆石子的数目，如果轮到你先取，假设双方都采取最好的策略，问最后你是胜者还是败者。",
      "extraInfo": "null",
      "id": "000009",
      "judgeScheme": "1",
      "judgeParam": "2000ms,100kb",
      "author": "pyltoca"
    },
    {
      "createTime": "20180910",
      "lastModifiedTime": "20180911",
      "title": "跳蚤",
      "text": "Z城市居住着很多只跳蚤。在Z城市周六生活频道有一个娱乐节目。一只跳蚤将被请上一个高空钢丝的正中央。钢丝很长，可以看作是无限长。节目主持人会给该跳蚤发一张卡片。卡片上写有N+1个自然数。其中最后一个是M，而前N个数都不超过M，卡片上允许有相同的数字。跳蚤每次可以从卡片上任意选择一个自然数S，然后向左，或向右跳S个单位长度。而他最终的任务是跳到距离他左边一个单位长度的地方，并捡起位于那里的礼物。 ",
      "extraInfo": "null",
      "id": "000010",
      "judgeScheme": "1",
      "judgeParam": "2000ms,100kb",
      "author": "pyltoca"
    },
    {
      "createTime": "20180810",
      "lastModifiedTime": "20180911",
      "title": "测试题目的长度如果狠狠狠狠狠狠狠长会怎么样呢呢呢嫩呢呢呢嫩额？？？？？？？？？？？？？？",
      "text": "do you know 1+1=??",
      "extraInfo": "null",
      "id": "000011",
      "judgeScheme": "1",
      "judgeParam": "2000ms,100kb",
      "author": "pyltoca"
    },
    {
      "createTime": "20180912",
      "lastModifiedTime": "20180916",
      "title": "1+1=?",
      "text": "do you know 1+1=??",
      "extraInfo": "null",
      "id": "000012",
      "judgeScheme": "1",
      "judgeParam": "2000ms,100kb",
      "author": "pyltoca"
    },
    {
      "createTime": "20180710",
      "lastModifiedTime": "20180910",
      "title": "1+1=?",
      "text": "do you know 1+1=??",
      "extraInfo": "null",
      "id": "000013",
      "judgeScheme": "1",
      "judgeParam": "2000ms,100kb",
      "author": "pyltoca"
    },
    {
      "createTime": "20180901",
      "lastModifiedTime": "20180911",
      "title": "1+1=?",
      "text": "do you know 1+1=??",
      "extraInfo": "null",
      "id": "000014",
      "judgeScheme": "1",
      "judgeParam": "2000ms,100kb",
      "author": "pyltoca"
    },
    {
      "createTime": "20180919",
      "lastModifiedTime": "20180920",
      "title": "1+1=?",
      "text": "do you know 1+1=??",
      "extraInfo": "null",
      "id": "000015",
      "judgeScheme": "1",
      "judgeParam": "2000ms,100kb",
      "author": "pyltoca"
    }
  ]
}
